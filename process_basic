#!/bin/bash
################################################################################
# Helper functions: see http://nco.sourceforge.net/nco.html#index-ncdmnlist
function ncvarlist() { ncks -m $1 | grep -v '[:=]' | cut -d '(' -f 1 -s | sed 's/.* //g' | xargs; }
  # cut tabulates data; -d chooses delimiter, -f chooses field (1 is first column, 2 is second, etc.)
  # and lines with no delimiters present always printed unless -s is selected; grep -v is inverse select
  # selection (so only blank lines/variable header titles remain) and the sed command leaves only trailing
  # non-whitespace character (so trims leading tab and 'float', 'double', etc. identifiers)
function verify() { [ ! -r $1 ] && echo "ERROR: File $1 not found." && exit 3; } # exit shell
  # tests if a given file was created or if the CDO script failed for some reason

################################################################################
# Processing data with CDO: main function
# Adds flux terms, variance terms and consolidates them into a file
# * Have issue with "enlarge" command when variables exist with more than one 
#   possible vertical coordinate (bhalf); need to remove them; or just don't output bhalf
# * So we delegate to NCO and NCL the job of fixing coordinates.
t=$(date +%s)
torig=$t
ncfile=$1 # take single file as argument
echo "Getting basic parameters with CDO..."
flags="-s -O" # need -O because sometimes get prompted to overwrite
timmean="" # for now not implemented
delnames="" # no longer writing vorticity; get after-fact with cdo uv2dv
# delnames=vor # not meaningful in longitude-mean
#   # vor was only kept as an interesting parameter to visualize

##############################################################################
# First get the basic zonal mean of everything
cdo $flags -zonmean $timmean -delname,$delnames $ncfile basic1.nc; verify basic1.nc
echo "  * Time for basic zonal mean: $(($(date +%s) - $t))s."
  # keep zonal-means of everything else, because interesting
# If we do not have instantaneous data don't bother with some stuff
[[ " $(ncvarlist $ncfile) " =~ " time_bounds " ]] && return

##############################################################################
# Heat flux and momentum flux
t=$(date +%s)
out=basic3.nc
cdo $flags -setattribute,EMF@long_name="eddy momentum flux",EMF@units="m2/s2" \
  -chname,u,EMF -zonmean $timmean \
  -mul -sub -selvar,u $ncfile -enlarge,$ncfile -zonmean -selvar,u $ncfile \
       -sub -selvar,v $ncfile -enlarge,$ncfile -zonmean -selvar,v $ncfile \
  $out; verify $out
echo "  * Time for eddy momentum flux: $(($(date +%s) - $t))s."
t=$(date +%s)
out=basic2.nc
cdo $flags -setattribute,EHF@long_name="eddy heat flux",EHF@units="K m/s" \
  -chname,t,EHF -zonmean $timmean \
  -mul -sub -selvar,t $ncfile -enlarge,$ncfile -zonmean -selvar,t $ncfile \
       -sub -selvar,v $ncfile -enlarge,$ncfile -zonmean -selvar,v $ncfile \
  $out; verify $out
echo "  * Time for eddy heat flux: $(($(date +%s) - $t))s."
t=$(date +%s)
out=basic4.nc
cdo $flags -setattribute,VHF@long_name="vertical eddy heat flux",VHF@units="K Pa/s" \
  -chname,t,VHF -zonmean $timmean \
  -mul -sub -selvar,t $ncfile -enlarge,$ncfile -zonmean -selvar,t $ncfile \
       -sub -selvar,omega $ncfile -enlarge,$ncfile -zonmean -selvar,omega $ncfile \
  $out; verify $out
echo "  * Time for vertical heat flux: $(($(date +%s) - $t))s."
# Omit PV because it is only really relevant on theta-surfaces
# cdo $flags -setattribute,EPF@long_name="eddy potential vorticity flux",EPF@units="K m3/kg s2" \
#   -chname,pv,EPF -zonmean $timmean \
#   -mul -sub -selvar,pv $ncfile -enlarge,$ncfile -zonmean -selvar,pv $ncfile \
#        -sub -selvar,v $ncfile -enlarge,$ncfile -zonmean -selvar,v $ncfile \
#   basic4.nc; verify basic4.nc
# echo "  * Time for eddy PV flux: $(($(date +%s) - $t))s."

##############################################################################
# Misc terms: eddy kinetic energy EKE
# * EKE should be multiplied by level width dP; final units are J/m2
t=$(date +%s)
out=basic5.nc
cdo $flags -setattribute,EKE@long_name="eddy kinetic energy",EKE@units="J/m2 Pa" \
  -chname,u,EKE $timmean -divc,9.81 -divc,2 \
  -add -zonmean -sqr -sub -selvar,u $ncfile -enlarge,$ncfile -zonmean -selvar,u $ncfile \
       -zonmean -sqr -sub -selvar,v $ncfile -enlarge,$ncfile -zonmean -selvar,v $ncfile \
  $out; verify $out
echo "  * Time for EKE: $(($(date +%s) - $t))s."
t=$(date +%s)

##############################################################################
# Simple terms: zonal eddy-u variance, eddy-T variance
# These are from Held-Suarez ideas
t=$(date +%s)
out=basic6.nc
cdo $flags -setattribute,tvar@long_name="temperature eddy-variance",tvar@units="K2" \
  -chname,t,tvar -zonmean $timmean \
  -sqr -sub -selvar,t $ncfile -enlarge,$ncfile -zonmean -selvar,t $ncfile \
  $out; verify $out
echo "  * Time for temperature variance: $(($(date +%s) - $t))s."
t=$(date +%s)
out=basic7.nc
cdo $flags -setattribute,uvar@long_name="zonal-wind eddy-variance",uvar@units="m2/s2" \
  -chname,u,uvar -zonmean $timmean \
  -sqr -sub -selvar,u $ncfile -enlarge,$ncfile -zonmean -selvar,u $ncfile \
  $out; verify $out
echo "  * Time for zonal wind variance: $(($(date +%s) - $t))s."
# TODO: zonal spectra? could store these for just a couple parameters,
# and truncate at lower wavenumbers
echo "TOTAL TIME ELAPSED: $(($(date +%s) - $torig))s."

