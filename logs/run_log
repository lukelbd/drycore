#!/usr/bin/env bash
#------------------------------------------------------------------------------#
# List the NetCDF files and namelist parameters in every single experiment
# directory.
#------------------------------------------------------------------------------#
shopt -s nullglob
names=($@) # remember $@ is special, nothing gets expanded
forcing=(arctic tropical vortex global surface)
roots=(~/scratch*)  # put symlinks to scratch in home directory
[ -z "$1" ] && names=("hs[12]_*")

# Get namelist param
nmlvalue() {
  cat input.nml | grep $1 | cut -d= -f2 | cut -d, -f1 | xargs
}

# Print days
message() {
  local files stat ns nd
  paths=($@)
  paths=(${paths[@]%.nc})  # from dir/dir/stuff.dXXXX-dYYYY.nc to dir/dir/stuff.dXXXX-dYYYY
  paths=(${paths[@]##*.})  # from dir/dir/stuff.dXXXX-dYYYY to dXXXX-dYYYY
  if [ ${#paths[@]} -eq 0 ]; then
    echo 0 0 na
  else
    # Get exit status
    if [ ${#paths[@]} -ge 2 ]; then
      ipaths=(${paths[-2]} ${paths[-1]})
    else
      ipaths=${paths[-1]}
    fi
    stat=na
    for jpath in ${ipaths[@]}; do
      [ -d $jpath ] || continue
      stat=0
      if ! [ -r $jpath/log.model ]; then
        stat=1
      elif [ -r $jpath/log.model ]; then
        grep -E 'EXIT CODE: [1-9]|FATAL from PE|WARNING from PE' $idir/log.model &>/dev/null
        [ $? -eq 0 ] && stat=1
      fi
    done
    # Days
    ns=${paths[0]:1}  # from dXXXX-dYYYY to XXXX-dYYYY
    ns=$(printf "%.0f" ${ns%-*})  # from XXXX-dYYYY to XXXX
    nd=${paths[-1]}
    nd=$(printf "%.0f" ${nd##*d})  # from dXXXX-dYYYY to YYYY
    # Message
    echo $ns $nd $stat
  fi
}

# Iterate
cwd=$(pwd)
unset series
prefix=2xdaily_inst # then there are _full, _summary, _summary_isen, _full_isen, and _spectral
log=$cwd/${0%_log}.log
echo $log
eday=5500
rm $log 2>/dev/null
for root in ${roots[@]}; do
  unset globs
  echo "Root: $root" &>> $log
  for name in "${names[@]}"; do
    globs+=($root/$name) # performs expansion
  done

  [ ${#globs[@]} -eq 0 ] && echo "No $name files found in ${root}." && continue
  for dir in ${globs[@]}; do
    # Get timestep
    cd -P $dir
    folder=${dir##*/}
    iseries=${folder%_p*}
    if [ "$iseries" != "$series" ]; then
      echo "Series: $iseries"
      printf "\nSeries: $iseries\n" &>> $log # new line
    fi
    series=$iseries
    dt='???'
    [ -r input.nml ] && dt=$(nmlvalue dt_atmos)

    # Get forcing params

    # Get day range for folders
    unset -v message
    dd=($(message d????-d????))

    # Get day range for files
    for suffix in full summary full_isen summary_isen spectral; do
      fd=($(message netcdf/${prefix}_${suffix}.d????-d????.nc))
      if [ ${fd[1]} -gt 0 ]; then
        message+=", ${suffix}: ${fd[0]}-${fd[1]}"
      fi
    done
    [ -z "$message" ] && message+=", no data"
    [ -r forcing.nc ] || message+=", no forcing.nc"
    message="${message:2}"

    # Get params corresponding to that parameter series
    dir=${dir##*/}
    nfields=$(echo $dir | tr '[^_]' ' ' | wc -w)
    iseries=${dir%_p*}
    [ "$iseries" != "$series" ] && printf "\nSeries: $iseries\n" &>> $log # new line
    series=$iseries
    if [ $nfields -eq 3 ]; then
      params="default"
    else
      params=${dir##*_}
      params="$(echo $params | tr p ' ' | sed 's/ 0*/ /g' | sed 's/ \./ 0./g' | xargs | sed 's/ /, /g')"
    fi

    # Message
    # echo $params | tee -a $log # parameters
    # echo "    dt: ${dt}, last day: ${dd[1]}." | tee -a $log
    # echo "    $message" | tee -a $log
    echo $params &>> $log # parameters
    echo "    dt: ${dt}, last day: ${dd[1]} (exit ${dd[2]})" &>> $log
    echo "    $message" &>> $log
  done
  echo &>> $log
done
